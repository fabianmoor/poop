/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I         &kp O          &kp P            &kp BSPC
&kp CAPSLOCK  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K         &kp L          &kp SV_O_UMLAUT  &kp SV_A_UMLAUT
&kp LSHFT     &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp SV_COMMA  &kp SV_PERIOD  &kp SV_MINUS     &kp ESC
                            &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans            &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans    &trans     &trans  &bt BT_CLR
                                  &kp LGUI  &trans  &kp SPACE    &kp RET   &mo 3     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL          &kp SV_DOUBLE_QUOTES  &kp HASH  &kp SV_DOLLAR  &kp PRCNT    &kp SV_CARET  &kp SV_SLASH  &kp SV_LEFT_PARENTHESIS  &kp SV_RIGHT_PARENTHESIS  &kp SV_PLUS      &kp BSPC
&kp LCTRL  &kp RA(NUMBER_2)  &trans                &trans    &trans         &trans       &trans        &kp SV_EQUAL  &kp SV_LEFT_BRACKET      &kp SV_RIGHT_BRACKET      &kp SV_ASTERISK  &kp SV_A_RING
&kp LSHFT  &kp SV_LT         &kp LS(SV_LT)         &trans    &trans         &trans       &kp UNDER     &trans        &kp SV_LEFT_BRACE        &trans                    &kp SV_ACUTE     &kp SV_TILDE
                                                   &kp LGUI  &trans         &kp SPACE    &kp RET       &trans        &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans            &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_CONTROL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
